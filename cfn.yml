AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CloudFormation Template was written for
  running Kittens Carousel Static Website on EC2.
  Kittens Carousel Static Website will be
  deployed on Amazon Linux 2023
  (latestamiid) EC2 Instance with
  custom security group which allows http
  connections on port 80 and ssh port 22 from
  anywhere. Kittens Carousel Static Website
  is downloaded from my Public Github repository,
  then deployed on Apache Web Server.
Parameters:
  myKeyName:
    Description: Type your key name
    Type: AWS::EC2::KeyPair::KeyName
    Default: nargiz2
  myInstanceType:
    Description: select your instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      
      - t2.medium
      - t2.micro
  imageID:
    Description: Choose your AMI
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64' 

Resources:
  myEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref myKeyName
      ImageId: !Ref imageID
      InstanceType: !Ref myInstanceType
      SecurityGroupIds: 
        - !Ref mySecgrp
      UserData: !Base64 |
                  #! /bin/bash
                  dnf update -y
                  dnf install httpd -y
                  FOLDER="https://raw.githubusercontent.com/nargizraf/aws-project/main/101-kittens-carousel-static-website-ec2/static-web"
                  cd /var/www/html
                  wget ${FOLDER}/index.html
                  wget ${FOLDER}/cat0.jpg
                  wget ${FOLDER}/cat1.jpg
                  wget ${FOLDER}/cat2.jpg
                  systemctl start httpd
                  systemctl enable httpd
      Tags:
        - Key: Name
          Value: !Sub nargiz ${AWS::StackName}  

  mySecgrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: nargiz_kitten_101_sg_grp
      GroupDescription: ssh and http #Required
    
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0


Outputs:
      myWebUrl:
        Description: Url of my webserver
        Value: !Sub
          - http://${PublicIP}
          - PublicIP: !GetAtt myEC2Instance.PublicIp   
